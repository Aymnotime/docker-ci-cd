name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout du code
        uses: actions/checkout@v3

      - name: Configurer Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13.1"

      - name: Installer les dépendances
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt

      - name: Lancer les tests
        run: |
          source venv/bin/activate
          pytest .github/workflows/test

  build-and-push:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout du code
        uses: actions/checkout@v3

      - name: Se connecter à Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Construire l'image Docker
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/flask-ci-cd .

      - name: Pousser l'image sur Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/flask-ci-cd

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Se connecter au serveur Docker
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Installer Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Déployer l'application avec Docker Compose
        run: |
          docker-compose down
          docker-compose pull
          docker-compose up -d
